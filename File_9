/*This code takes two diffrerent images and it detects the blobs , the parrameters for detection of blob may vary
like size,color...
Also the coordinates of the blob  is also displayed in the output */


#include "opencv2/opencv.hpp"
#include<iostream>

#include<stdio.h>

using namespace cv;
using namespace std;
int main(){


Mat im = imread( "singleDot.png" );


cv::SimpleBlobDetector::Params params;
params.minDistBetweenBlobs = 5.0f;
params.filterByInertia = false;
params.filterByConvexity = false;
//params.filterByColor = true ;
//params.blobColor=0;
params.filterByCircularity = false;
params.filterByArea = true;
params.minArea = 3000.0f;
params.maxArea = 50000.0f;

// ... any other params you don't want default value

// set up and create the detector using the parameters
cv::SimpleBlobDetector blob_detector(params);
// or cv::Ptr<cv::SimpleBlobDetector> detector = cv::SimpleBlobDetector::create(params)

// detect!
vector<cv::KeyPoint> keypoints;
blob_detector.detect(im, keypoints);

// extract the x y coordinates of the keypoints:

for (int i=0; i<keypoints.size(); i++){
    float X = keypoints[i].pt.x;
    float Y = keypoints[i].pt.y;
//cout<<"hh";
    cout<<X<<" "<<Y<<endl;
}
Mat im_with_keypoints;
	drawKeypoints( im, keypoints, im_with_keypoints, Scalar(0,200,255), DrawMatchesFlags::DRAW_RICH_KEYPOINTS );

	// Show blobs
	imshow("keypoints", im_with_keypoints );
	waitKey(0);

cout<<"Seperation For Second :"<<endl;
Mat ima = imread( "red.jpg" );
cv::SimpleBlobDetector::Params paramsa;
paramsa.minDistBetweenBlobs = 50.0f;
paramsa.filterByInertia = false;
paramsa.filterByConvexity = false;
//paramsa.filterByColor = true ;
//paramsa.blobColor=0;
paramsa.filterByCircularity = false;
paramsa.filterByArea = true;
paramsa.minArea = 1000.0f;
paramsa.maxArea = 5000.0f;

// ... any other paramsa you don't want default value

// set up and create the detector using the parameters
cv::SimpleBlobDetector blob_detectora(paramsa);
// or cv::Ptr<cv::SimpleBlobDetector> detector = cv::SimpleBlobDetector::create(paramsa)

// detect!
vector<cv::KeyPoint> keypointsa;
blob_detectora.detect(ima, keypoints);

// extract the x y coordinates of the keypointsa:

for (int i=0; i<keypoints.size(); i++){
    float X = keypoints[i].pt.x;
    float Y = keypoints[i].pt.y;
//cout<<"hh";
    cout<<X<<" "<<Y<<endl;
}
Mat im_with_keypointsa;
	drawKeypoints( ima, keypoints, im_with_keypointsa, Scalar(0,200,255), DrawMatchesFlags::DRAW_RICH_KEYPOINTS );

	// Show blobs
	imshow("keypointsa", im_with_keypointsa );
	waitKey(0);



return 0;
}
